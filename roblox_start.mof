#pragma namespace ("\\\\.\\root\\subscription")

instance of ActiveScriptEventConsumer as $Cons
{
    Name = "START_ROBLOX_Win10";
    ScriptingEngine = "VBScript";
    ScriptText = 
    "Option Explicit\n"
    "Dim wshShell, objFS, objFile, morningTotal,afternoonTotal,dailyTotal,regVal\n"
    "Dim theDayOfYearToday,strLine,arrFields,regKeySuffix,theHour,period,secondsFromNow\n"
    "Dim theEndDate,theStartDate,theDayOfYear,elapsedSec,strComputer,dailyAllowance\n"
    "Dim message, postRobloxSeconds\n"
    "Set objFS = CreateObject(\"Scripting.FileSystemObject\")\n"
    "Const ForReading=1\n"
    "Set wshShell=CreateObject( \"WScript.Shell\" )\n"
    "theHour=DatePart(\"h\",Now)\n"
    "If theHour < 12 Then\n"
    "regKeySuffix=\"_morning\"\n"
    "period=\" this morning\"\n"
    "Else\n"
    "regKeySuffix=\"_afternoon\"\n"
    "period=\" this afternoon\"\n"
    "End If\n"
    "On Error Resume Next\n"
    "Err.Clear\n"
    "regVal=wshShell.RegRead( _\n"
    "  \"HKEY_CURRENT_CONFIG\\New Key #1\\minutes\" & regKeySuffix)\n"
    "If Err.Number <> 0 Then\n"
    "  message = Err.Number & \" \" & Err.Source & \" \" & Err.Description\n"
    "  log(message)\n"
    "  regVal=30\n"
    "End If\n"
    "dailyAllowance=CInt(regVal)*60\n"
    "regVal=wshShell.RegRead( _\n"
    "  \"HKEY_CURRENT_CONFIG\\New Key #1\\minutes_post_roblox\")\n"
    "If Err.Number <> 0 Then\n"
    "  message = Err.Number & \" \" & Err.Source & \" \" & Err.Description\n"
    "  log(message)\n"
    "  regVal=5\n"
    "End If\n"
    "postRobloxSeconds=CInt(regVal)*60\n"
    "dailyTotal=0\n"
    "morningTotal=0\n"
    "afternoonTotal=0\n"
    "theDayOfYearToday=DatePart(\"y\",Now)\n"
    "Set objFile = objFS.OpenTextFile( _\n"
    "  \"C:\\scripts\\roblox.log\", ForReading, true)\n"
    "Dim detail\n"
    "detail=\"\"\n"
    "Do Until objFile.AtEndOfStream\n"
    "  strLine = objFile.ReadLine\n"
    "  arrFields = Split(strLine,\",\")\n"
    "  If (IsArray(arrfields) And UBound(arrFields) >=0) Then\n"
    "     If arrFields(0) = \"End\" Then\n"
    "       theEndDate = CDate(arrFields(1))\n"
    "	    theDayOfYear = DatePart(\"y\", theEndDate)\n"
    "       If theDayOfYear = theDayOfYearToday Then\n"
    "         elapsedSec = arrFields(2)\n"
    "         theStartDate = CDate(arrFields(5))\n"
    "         Dim m, s, theEndTime\n"
    "         m = arrFields(2) \\ 60 \n"
    "         s = arrFields(2) mod 60 \n"
    "         theEndTime = FormatDateTime(theEndDate,vbLongTime)\n"
    "         dailyTotal = dailyTotal + CLng(elapsedSec)\n"
    "         Dim theStartHour\n"
    "         theStartHour = DatePart(\"h\",theStartDate)\n" 
    "         If ((theHour < 12) AND (theStartHour < 12)) Then\n"
    " 	        detail = detail & \" \" & arrFields(5) _\n"
    "             & \">\" & theEndTime & \" (\" & m & \":\" & s & \") \" &Chr(13)\n"
    "           morningTotal = morningTotal + CLng(elapsedSec)\n"
    "         Else\n"
    "           If (theHour >=12) AND (theStartHour >= 12) Then\n"
    "  	          detail = detail & \" \" & arrFields(5) _\n"
    "             & \">\" & theEndTime & \" (\" & m & \":\" & s & \") \" & Chr(13)\n"
    "             afternoonTotal = afternoonTotal + CLng(elapsedSec)\n"
    "           End If\n"
    "         End If\n"
    "       End If\n"
    "     End If\n"
    "  End If\n"
    "loop\n"
    "objFile.Close\n"
    "Dim dayOfWeek\n"
    "dayOfWeek = GetDayOfWeek()\n"
    "Dim objFile2, objFSO, seconds,minutesRemaining, processId, processName\n"
    "Set objFSO = CreateObject(_ \n"
    "    \"Scripting.FileSystemObject\")\n"
    "Set objFile2 = objFSO.OpenTextFile( _ \n"
    "    \"C:\\scripts\\roblox.log\", 8)\n"
    "processId=TargetEvent.TargetInstance.ProcessId\n"
    "processName=TargetEvent.TargetInstance.Name\n"
    "Dim owner\n"
    "owner = GetOwner(processId)\n"
    "Dim isMinecraft\n"
    "isMineCraft=0\n"
    "If TargetEvent.TargetInstance.Name = \"javaw.exe\" Then \n"
    "  If TargetEvent.TargetInstance.ExecutablePath = \"C:\\Program Files (x86)\\Minecraft Launcher\\runtime\\java-runtime-alpha\\windows-x64\\java-runtime-alpha\\bin\\javaw.exe\"  Then \n"
    "    isMineCraft=1\n"
    "  End If\n"
    "  If isMineCraft=1 Then\n"
    "    objFile2.WriteLine \"Minecraft: \" & TargetEvent.TargetInstance.ExecutablePath & \" \" & morningTotal & \" \" & dailyAllowance\n"
    "  Else\n"
    "    objFile2.WriteLine \"Java but not Minecraft\" & TargetEvent.TargetInstance.ExecutablePath\n"
    "    objFile2.close\n"
    "    return\n"
    "  End If\n"
    "End If\n"
    "objFile2.WriteLine \"Start, \" & Now & \",\" _\n"
    "  & dailyTotal & \",\" & processId & \",\" & owner & \",\" & processName & \",\" & regVal\n"    
    "objFile2.Close \n"
    "If (theHour < 12 AND morningTotal >= dailyAllowance) _\n"
    " OR (theHour >=12 AND afternoonTotal >= dailyAllowance) Then\n"
    "  secondsFromNow=1\n"
    "  call schedMessage(\"\"\"Sorry \" & owner & _\n"
    "    \", you've used all your Roblox minutes for \" & period & \" \" _\n"
    "    & dayOfWeek & Chr(13) & detail & \"\",secondsFromNow,\"RobloxMessageID\")\n"
    "  call theReaper(processId)\n"
    "Else\n"
    "  If (theHour < 12) Then\n"
    "  seconds = dailyAllowance - morningTotal\n"
    "  Else\n"
    "  seconds = dailyAllowance - afternoonTotal\n"
    "  End If\n"
    "  minutesRemaining = seconds / 60\n"    
    "  Dim msg, formatMinutes\n"
    "  formatMinutes = FormatNumber(minutesRemaining, 0, vbFalse)\n"
    "  msg = \"\"\"You have \" & formatMinutes & \" Roblox minutes left \" & period & \"\"\"\"\n"
    "  secondsFromNow=1\n"
    "  call schedMessage(msg,secondsFromNow,\"RobloxMessageID\")\n"
    "  call schedReaper(seconds, processId)\n"
    "  if seconds > 300 then\n"
    "    secondsFromNow = seconds-300\n"
    "    call schedMessage(\"\"\"You have 5 mins left\"\"\", secondsFromNow,\"FiveMinsLeft\")\n"
    "  end if\n"
    "  call schedScreenLock(seconds + postRobloxSeconds)\n"
    "End If\n"
    "Sub theReaper(procId)\n"
    "Dim ProgramPath, WshShell, ProgramArgs, WaitOnReturn,intWindowStyle\n"
    "Set WshShell=CreateObject (\"WScript.Shell\")\n"
    "ProgramPath=\"c:\\scripts\\reaper.vbs\"\n"
    "ProgramArgs=procId\n"
    "intWindowStyle=1\n"
    "WaitOnReturn=False\n"
    "WshShell.Run Chr (34) & ProgramPath & Chr (34) _\n"
    "  & Space (1) & ProgramArgs,intWindowStyle, WaitOnReturn\n"
    "end Sub\n"
    "Function GetOwner(procId )\n" 
    "Dim objWMIService, colProcess,strNameOfUser, objProcess, retval\n"
    "set objWMIService = GetObject(\"winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2\")\n"
    "Set colProcess = objWMIService.ExecQuery _ \n"
    "  (\"Select * from Win32_Process where ProcessId='\" & procId & \"'\",,48)\n"      
    "  For Each objProcess in colProcess\n"
    "      retval = objProcess.getOwner(strNameOfUser)\n"
    "    On Error Resume Next\n"
    "    Err.Clear\n"
    "    GetOwner = strNameOfUser\n"
    "    If Err.Number <> 0 Then\n"
    "      objFile2.WriteLine Err.Number\n"
    "      objFile2.WriteLine Err.Source\n"
    "      objFile2.WriteLine Err.Description\n"
    "      Err.Clear\n"
    "    End If\n"
    "    On Error Goto 0\n"
    "  Next\n"
    "end Function\n"
    "Sub schedReaper(seconds, pid)\n"
    "const TriggerTypeTime = 1\n"
    "const ActionTypeExec = 0\n"
    "Set objFSO = CreateObject(\"Scripting.FileSystemObject\")\n"
    "Set objFile2 = objFSO.OpenTextFile(\"C:\\scripts\\roblox.log\", 8)\n"
    "Dim service\n"
    "Set service = CreateObject(\"Schedule.Service\")\n"
    "call service.Connect()\n"
    "Dim rootFolder\n"
    "Set rootFolder = service.GetFolder(\"\\\")\n"
    "Dim taskDefinition\n"
    "Set taskDefinition = service.NewTask(0)\n"
    "Dim regInfo, strUser\n"
    "Set regInfo = taskDefinition.RegistrationInfo\n"
    "regInfo.Description = \"Kill task at certain time\"\n"
    "strUser = CreateObject(\"WScript.Network\").UserName\n"
    "regInfo.Author = strUser\n"
    "Dim principal\n"
    "Set principal = taskDefinition.Principal\n"
    "principal.LogonType=3\n"
    "Dim settings\n"
    "Set settings = taskDefinition.Settings\n"
    "settings.Enabled = True\n"
    "settings.StartWhenAvailable = True\n"
    "settings.Hidden = True\n"
    "settings.DeleteExpiredTaskAfter = \"PT5M\"\n" 
    "Dim triggers\n"
    "Set triggers = taskDefinition.Triggers\n"
    "Dim trigger\n"
    "Set trigger = triggers.Create(TriggerTypeTime)\n"
    "Dim startTime, endTime\n"
    "Dim time\n"
    "time = DateAdd(\"s\", seconds, Now)\n"
    "startTime = XmlTime(time)\n"
    "time = DateAdd(\"n\", seconds+60, Now)\n"
    "endTime = XmlTime(time)\n"
    "trigger.StartBoundary = startTime\n"
    "trigger.EndBoundary = endTime\n"
    "trigger.ExecutionTimeLimit = \"PT1H\"\n"
    "trigger.Id = \"ReaperTimeTriggerId\"\n"
    "trigger.Enabled = True\n"
    "Dim Action, ex\n"
    "Set Action = taskDefinition.Actions.Create( ActionTypeExec )\n"
    "Action.Path = \"c:\\scripts\\reaper.vbs\"\n"
    "Action.Arguments = pid\n"
    "On Error Resume Next\n"
    "Err.Clear\n"
    "call rootFolder.RegisterTaskDefinition( _ \n" 
    "   \"Reaper TimeTrigger\", taskDefinition, 6,\"sdobson\",\"password\", 3)\n"
    "If Err.Number <> 0 Then\n"
    "  objFile2.WriteLine Err.Number\n"
    "  objFile2.WriteLine Err.Source\n"
    "  objFile2.WriteLine Err.Description\n"
    "  Err.Clear\n"
    "End If\n"
    "On Error Goto 0\n"
    "objFile2.WriteLine \"reaper set to run at \" & startTime & \",\" & pid\n"
    "objFile2.close\n"
    "end Sub\n"
    "Sub schedMessage(message1,secondsFromNow,triggerId)\n"
    "const TriggerTypeTime = 1\n"
    "const TriggerTypeRegistration = 7\n"
    "const ActionTypeShowMessage = 7\n"
    "const ActionTypeExec = 0\n"
    "Set objFSO = CreateObject(\"Scripting.FileSystemObject\")\n"
    "Set objFile2 = objFSO.OpenTextFile(\"C:\\scripts\\roblox.log\", 8)\n"
    "Dim service\n"
    "Set service = CreateObject(\"Schedule.Service\")\n"
    "call service.Connect()\n"
    "Dim rootFolder\n"
    "Set rootFolder = service.GetFolder(\"\\\")\n"
    "Dim taskDefinition\n"
    "Set taskDefinition = service.NewTask(0)\n"
    "Dim regInfo, strUser\n"
    "Set regInfo = taskDefinition.RegistrationInfo\n"
    "regInfo.Description = \"Inform out of time\"\n"
    "strUser = CreateObject(\"WScript.Network\").UserName\n"
    "regInfo.Author = strUser\n"
    "Dim principal\n"
    "Set principal = taskDefinition.Principal\n"
    "principal.LogonType=3\n"
    "Dim settings\n"
    "Set settings = taskDefinition.Settings\n"
    "settings.Enabled = True\n"
    "settings.StartWhenAvailable = True\n"
    "settings.Hidden = False\n"
    "settings.DeleteExpiredTaskAfter = \"PT0M\"\n"
    "Dim triggers\n"
    "Set triggers = taskDefinition.Triggers\n"
    "Dim trigger\n"
    "Set trigger = triggers.Create(TriggerTypeTime)\n"
    "Dim startTime, endTime\n"
    "Dim time\n"
    "time = DateAdd(\"s\", secondsFromNow, Now)\n"
    "startTime = XmlTime(time)\n"
    "time = DateAdd(\"n\", secondsFromNow+1, Now)\n"
    "endTime = XmlTime(time)\n"
    "trigger.StartBoundary = startTime\n"
    "trigger.EndBoundary = endTime\n"
    "trigger.ExecutionTimeLimit = \"PT0M\"\n"
    "trigger.Id = triggerId\n"
    "trigger.Enabled = True\n"
    "Dim Action, ex\n"
    "Set Action = taskDefinition.Actions.Create( ActionTypeExec )\n"
    "Action.Path = \"c:\\scripts\\showmessage.vbs\"\n"
    "Action.Arguments = message1\n"
    "On Error Resume Next\n"
    "Err.Clear\n"
    "  call rootFolder.RegisterTaskDefinition( _\n" 
    "   triggerId, taskDefinition, 6,_\n"
    "   \"sdobson\",\"password\",3)\n"
    "If Err.Number <> 0 Then\n"
    "  objFile2.WriteLine Err.Number\n"
    "  objFile2.WriteLine Err.Source\n"
    "  objFile2.WriteLine Err.Description\n"
    "  Err.Clear\n"
    "End If\n"
    "On Error Goto 0\n"
    "objFile2.close\n"
    "end Sub\n"
    "Sub schedScreenLock(seconds)\n"
    "const TriggerTypeTime = 1\n"
    "const ActionTypeExec = 0\n"
    "Set objFSO = CreateObject(\"Scripting.FileSystemObject\")\n"
    "Set objFile2 = objFSO.OpenTextFile(\"C:\\scripts\\roblox.log\", 8)\n"
    "Dim service\n"
    "Set service = CreateObject(\"Schedule.Service\")\n"
    "call service.Connect()\n"
    "Dim rootFolder\n"
    "Set rootFolder = service.GetFolder(\"\\\")\n"
    "Dim taskDefinition\n"
    "Set taskDefinition = service.NewTask(0)\n"
    "Dim regInfo, strUser\n"
    "Set regInfo = taskDefinition.RegistrationInfo\n"
    "regInfo.Description = \"Lock The Screen\"\n"
    "strUser = CreateObject(\"WScript.Network\").UserName\n"
    "regInfo.Author = strUser\n"
    "Dim principal\n"
    "Set principal = taskDefinition.Principal\n"
    "principal.LogonType=3\n"
    "Dim settings\n"
    "Set settings = taskDefinition.Settings\n"
    "settings.Enabled = True\n"
    "settings.Hidden = False\n"
    "Dim triggers\n"
    "Set triggers = taskDefinition.Triggers\n"
    "Dim trigger\n"
    "Set trigger = triggers.Create(TriggerTypeTime)\n"
    "Dim startTime, endTime\n"
    "Dim time\n"
    "time = DateAdd(\"s\", seconds, Now)\n"
    "startTime = XmlTime(time)\n"
    "time = DateAdd(\"d\", 1, Now)\n"
    "endTime = XmlTime(time)\n"
    "trigger.StartBoundary = startTime\n"
    "trigger.EndBoundary = endTime\n"
    "trigger.Id = \"ScreenLock\"\n"
    "trigger.Enabled = True\n"
    "trigger.ExecutionTimeLimit = \"PT1M\"\n"
    "Dim Action, ex\n"
    "Set Action = taskDefinition.Actions.Create( ActionTypeExec )\n"
    "Action.Path = \"c:\\scripts\\lock.vbs\"\n"
    "On Error Resume Next\n"
    "Err.Clear\n"
    "call rootFolder.RegisterTaskDefinition( _ \n" 
    "   \"ScreenLock\", taskDefinition, 6,\"sdobson\",\"password\", 3)\n"
    "If Err.Number <> 0 Then\n"
    "  objFile2.WriteLine Err.Number\n"
    "  objFile2.WriteLine Err.Source\n"
    "  objFile2.WriteLine Err.Description\n"
    "  Err.Clear\n"
    "End If\n"
    "On Error Goto 0\n"
    "objFile2.WriteLine \"screenlock set to run at \" & startTime\n"
    "objFile2.close\n"
    "end Sub\n"
    "Function XmlTime(t)\n"
    "Dim cSecond, cMinute, CHour, cDay, cMonth, cYear\n"
    "Dim tTime, tDate\n"
    "cSecond = \"0\" & Second(t)\n"
    "cMinute = \"0\" & Minute(t)\n"
    "cHour = \"0\" & Hour(t)\n"
    "cDay = \"0\" & Day(t)\n"
    "cMonth = \"0\" & Month(t)\n"
    "cYear = Year(t)\n"
    "tTime = Right(cHour, 2) & \":\" & Right(cMinute, 2) & _\n"
    "    \":\" & Right(cSecond, 2)\n"
    "tDate = cYear & \"-\" & Right(cMonth, 2) & \"-\" & Right(cDay, 2)\n"
    "XmlTime = tDate & \"T\" & tTime\n" 
    "End Function\n"
    "Function GetDayOfWeek()\n"
    "Dim dtmToday, dtmDayOfWeek\n"
    "dtmToday = Date()\n"
    "dtmDayOfWeek = DatePart(\"w\", dtmToday)\n"
    "Select Case dtmDayOfWeek\n"
    "  Case 1 GetDayOfWeek = \"Sunday\"\n"
    "  Case 2 GetDayOfWeek = \"Monday\"\n"
    "  Case 3 GetDayOfWeek = \"Tuesday\"\n"
    "  Case 4 GetDayOfWeek = \"Wednesday\"\n"
    "  Case 5 GetDayOfWeek = \"Thursday\"\n"
    "  Case 6 GetDayOfWeek = \"Friday\"\n"
    "  Case 7 GetDayOfWeek = \"Saturday\"\n"
    "End Select\n"
    "end Function\n"
    "Sub log(msg)\n"
    "Dim logFile\n"
    "Set logFile = objFS.OpenTextFile( _ \n"
    "    \"C:\\scripts\\roblox.log\", 8)\n"
    "logFile.WriteLine msg\n"
    "logFile.Close\n"
    "end Sub\n";
};

instance of __EventFilter as $Filt
{
    Name = "ROBLOX_START_EF";
    Query = "SELECT * FROM __InstanceCreationEvent WITHIN 5 "
        "WHERE TargetInstance ISA \"Win32_Process\" "
        "AND ( TargetInstance.Name = \"RobloxPlayerBeta.exe\" "
        "OR TargetInstance.Name = \"Windows10Universal.exe\" "
	"OR TargetInstance.Name = \"javaw.exe\" ) ";
    QueryLanguage = "WQL";
    EventNamespace = "root\\cimv2";
};

instance of __FilterToConsumerBinding
{
    Filter = $Filt;
    Consumer = $Cons;
};